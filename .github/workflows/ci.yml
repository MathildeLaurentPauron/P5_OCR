name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Exécuter sur chaque push vers la branche principale
  pull_request:
    branches:
      - main  # Exécuter également sur chaque PR vers la branche principale

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Étape 4 : Exécuter les tests unitaires
      - name: Run unit tests
        run: python3 -u -m unittest test_predict_tags.py

      # Étape 5 : Déployer sur le serveur EC2
      #configurer la clé SSH
      - name: Configure SSH Key
        run: |
          echo "$EC2_PEM_KEY" > key.pem
          chmod 600 key.pem
        env:
          EC2_PEM_KEY: ${{ secrets.EC2_PEM_KEY }}

      #configurer les identifiants AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::182399725717:role/ocr_user
          aws-region: "eu-west-3"

      #déployer sur le serveur EC2
      - name: Deploy to EC2
        env:
          EC2_USER: "ubuntu"  
          EC2_HOST: "13.39.23.8"  
        run: |

          # Copier les fichiers sur le serveur EC2
          scp -o StrictHostKeyChecking=no -i key.pem -r . $EC2_USER@$EC2_HOST:/home/$EC2_USER/P5_OCR
          
          # Se connecter au serveur et exécuter les commandes
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
          cd /home/$EC2_USER/P5_OCR
          chmod +x install_app.sh
          ./install_app.sh  # Lancer le script
          EOF

          # Redémarrage du service (adapter à votre config, ex : systemd, pm2, etc.)
          #sudo systemctl restart myapp.service